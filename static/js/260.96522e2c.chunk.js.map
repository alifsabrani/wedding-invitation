{"version":3,"file":"static/js/260.96522e2c.chunk.js","mappings":"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","sources":["pages/home/index.tsx"],"sourcesContent":["import { createRef, forwardRef, useState } from \"react\";\r\nimport { Element, Link } from \"react-scroll\";\r\nimport { animated, useChain, useSpring, useSpringRef } from \"react-spring\";\r\n\r\nimport Col from \"../../components/Col\";\r\nimport Container from \"../../components/Container\";\r\nimport Row from \"../../components/Row\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { useInViewport } from \"react-in-viewport\";\r\nimport Button from \"../../components/Button\";\r\nimport { Invitee, NavItem } from \"../../types\";\r\nimport CoupleParallax from \"../couple-parallax\";\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  navItems?: Array<NavItem>;\r\n  onOpen?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  isOpened?: boolean;\r\n  onParallaxRendered: () => void;\r\n  invitee: Invitee;\r\n};\r\n\r\nconst springConfig = { mass: 30, tension: 500, friction: 150 };\r\n\r\nconst Home = forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      navItems,\r\n      onOpen,\r\n      isOpened,\r\n      onParallaxRendered,\r\n      invitee,\r\n    }: Props,\r\n    ref: React.Ref<HTMLDivElement>\r\n  ) => {\r\n    const parallaxRef = createRef<HTMLDivElement>();\r\n    const parallaxViewPort = useInViewport(\r\n      parallaxRef,\r\n      {},\r\n      { disconnectOnLeave: true }\r\n    );\r\n\r\n    const titleAnimationRef = useSpringRef();\r\n    const nameAnimationRef = useSpringRef();\r\n    const dateAnimationRef = useSpringRef();\r\n    const arrowButtonAnimationRef = useSpringRef();\r\n\r\n    const titleAnimation = useSpring({\r\n      config: springConfig,\r\n      opacity: 1,\r\n      y: 0,\r\n      from: { opacity: 0, y: 20 },\r\n      ref: titleAnimationRef,\r\n    });\r\n\r\n    const nameAnimation = useSpring({\r\n      config: springConfig,\r\n      opacity: 1,\r\n      x: 0,\r\n      from: { opacity: 0, x: 20 },\r\n      ref: nameAnimationRef,\r\n    });\r\n\r\n    const dateAnimation = useSpring({\r\n      config: springConfig,\r\n      opacity: 1,\r\n      y: 0,\r\n      from: { opacity: 0, y: 20 },\r\n      ref: dateAnimationRef,\r\n    });\r\n\r\n    const arrowButtonAnimation = useSpring({\r\n      config: springConfig,\r\n      opacity: 1,\r\n      y: 0,\r\n      from: { opacity: 0, y: 20 },\r\n      ref: arrowButtonAnimationRef,\r\n    });\r\n\r\n    const [flip, set] = useState(false);\r\n    const blink = useSpring({\r\n      to: { height: \"100%\", width: \"100%\" },\r\n      from: { height: \"90%\", width: \"90%\" },\r\n      height: 100,\r\n      reset: true,\r\n      reverse: flip,\r\n      config: { duration: 800 },\r\n      onRest: () => set(!flip),\r\n    });\r\n\r\n    useChain(\r\n      [\r\n        titleAnimationRef,\r\n        nameAnimationRef,\r\n        dateAnimationRef,\r\n        arrowButtonAnimationRef,\r\n      ],\r\n      [1, 2, 3, 3]\r\n    );\r\n\r\n    return (\r\n      <Element name=\"Home\">\r\n        <Container fullWidth>\r\n          <div ref={ref}>\r\n            <Row align=\"center\" verticalAlign=\"top\" pageSection>\r\n              <Row align=\"center\">\r\n                <Col size={12}>\r\n                  <animated.h3 style={titleAnimation} className=\"text-center\">\r\n                    DEAR <strong>{invitee.name}</strong>,\r\n                  </animated.h3>\r\n                </Col>\r\n                <Col size={12}>\r\n                  <animated.h4 style={titleAnimation} className=\"text-center\">\r\n                    YOU ARE <strong>INVITED</strong> TO THE{\" \"}\r\n                    <strong>WEDDING</strong> OF\r\n                  </animated.h4>\r\n                  <animated.div style={nameAnimation}>\r\n                    <h1 className=\"text-center\">Ifti</h1>\r\n                    <h1 className=\"text-center\">&</h1>\r\n                    <h1 className=\"text-center\">Alif</h1>\r\n                  </animated.div>\r\n                  <animated.h4 style={dateAnimation} className=\"text-center\">\r\n                    <strong>SATURDAY</strong>, 8\r\n                    <sup>\r\n                      <small>TH</small>\r\n                    </sup>{\" \"}\r\n                    OCTOBER 2022\r\n                  </animated.h4>\r\n                </Col>\r\n              </Row>\r\n              <Row align=\"center\" verticalAlign=\"verticalCenter\" noMargin>\r\n                <Col size={12}>\r\n                  <animated.div style={arrowButtonAnimation}>\r\n                    <Link\r\n                      to={isMobile ? \"HomeParalax\" : \"Couple\"}\r\n                      spy={true}\r\n                      smooth={\"easeInOutQuint\"}\r\n                      duration={1000}\r\n                      className=\"text-center\"\r\n                      offset={1}\r\n                    >\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"fill\"\r\n                        size=\"l\"\r\n                        onClick={onOpen}\r\n                        withShadow\r\n                      >\r\n                        <h4>Open here</h4>\r\n                      </Button>\r\n                    </Link>\r\n                  </animated.div>\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n            <Element name=\"HomeParalax\">\r\n              {isMobile && isOpened && (\r\n                <Container mobileOnly fullWidth>\r\n                  <Row align=\"center\">\r\n                    <CoupleParallax\r\n                      isVisible={parallaxViewPort.inViewport}\r\n                      ref={parallaxRef}\r\n                      navItems={navItems}\r\n                      onRendered={onParallaxRendered}\r\n                    ></CoupleParallax>\r\n                  </Row>\r\n                </Container>\r\n              )}\r\n            </Element>\r\n          </div>\r\n        </Container>\r\n      </Element>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Home;\r\n"],"names":["springConfig","mass","tension","friction","Home","forwardRef","ref","children","navItems","onOpen","isOpened","onParallaxRendered","invitee","parallaxRef","createRef","parallaxViewPort","useInViewport","disconnectOnLeave","titleAnimationRef","useSpringRef","nameAnimationRef","dateAnimationRef","arrowButtonAnimationRef","titleAnimation","useSpring","config","opacity","y","from","nameAnimation","x","dateAnimation","arrowButtonAnimation","useState","flip","set","to","height","width","reset","reverse","duration","onRest","useChain","name","fullWidth","align","verticalAlign","pageSection","size","animated","style","className","noMargin","isMobile","spy","smooth","offset","color","variant","onClick","withShadow","mobileOnly","isVisible","inViewport","onRendered"],"sourceRoot":""}