{"version":3,"file":"static/js/246.b039fc48.chunk.js","mappings":"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","sources":["webpack://my-wedding/./src/components/Carousel/style.module.css?c15c","components/Carousel/index.tsx","components/Gallery/index.tsx","pages/gallery/parallax.tsx","pages/gallery/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"style_gallery__7TwoZ\",\"background\":\"style_background__u8Q2j\",\"content\":\"style_content__ok+iO\",\"imageContainer\":\"style_imageContainer__ixp2m\",\"closeButton\":\"style_closeButton__1+bGx\",\"nextButton\":\"style_nextButton__EwKxq\",\"prevButton\":\"style_prevButton__u31uc\",\"loadedImage\":\"style_loadedImage__GLzA8\",\"unloadedImage\":\"style_unloadedImage__yIFvp\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { MdClose, MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\r\nimport Button from \"../Button\";\r\n\r\nimport styles from \"./style.module.css\";\r\nimport Loader from \"../Loader\";\r\n\r\ntype Props = {\r\n  images: Array<string>;\r\n  selectedIndex?: number;\r\n  handleClose: () => void;\r\n};\r\n\r\nconst Carousel: React.FC<Props> = ({ images, selectedIndex, handleClose }) => {\r\n  const [indexToShow, setIndexToShow] = useState(selectedIndex || 0);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setImageLoaded(false);\r\n  }, [indexToShow]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflowY = \"hidden\";\r\n    return () => {\r\n      document.body.style.overflowY = \"scroll\";\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.gallery}>\r\n      <div className={styles.background} onClick={() => handleClose()}></div>\r\n      <div className={styles.content}>\r\n        {imageLoaded && (\r\n          <div className={styles.closeButton}>\r\n            <Button\r\n              onClick={() => handleClose()}\r\n              color=\"light\"\r\n              variant=\"transparent\"\r\n              size=\"l\"\r\n              icon\r\n            >\r\n              <MdClose></MdClose>\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={styles.prevButton}>\r\n          {indexToShow > 0 && imageLoaded && (\r\n            <Button\r\n              onClick={() => setIndexToShow(indexToShow - 1)}\r\n              color=\"light\"\r\n              variant=\"transparent\"\r\n              size=\"l\"\r\n              icon\r\n            >\r\n              <MdNavigateBefore></MdNavigateBefore>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className={styles.imageContainer} onClick={() => {}}>\r\n          <img\r\n            src={images[indexToShow]}\r\n            alt={`Preview of ${indexToShow + 1}`}\r\n            onLoad={() => setImageLoaded(true)}\r\n            className={imageLoaded ? styles.loadedImage : styles.unloadedImage}\r\n          ></img>\r\n          {!imageLoaded && <Loader></Loader>}\r\n        </div>\r\n        <div className={styles.nextButton}>\r\n          {indexToShow < images.length - 1 && imageLoaded && (\r\n            <Button\r\n              onClick={() => setIndexToShow(indexToShow + 1)}\r\n              color=\"light\"\r\n              variant=\"transparent\"\r\n              size=\"l\"\r\n              icon\r\n            >\r\n              <MdNavigateNext></MdNavigateNext>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport Gallery, { PhotoProps } from \"react-photo-gallery\";\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\nimport { animated as a, useSpring } from \"react-spring\";\r\n\r\nimport { GalleryItem } from \"../../types\";\r\n\r\nimport Carousel from \"../Carousel\";\r\n\r\ntype Photos = {\r\n  index: number;\r\n  next: PhotoProps<{}> | null;\r\n  photo: PhotoProps<{}>;\r\n  previous: PhotoProps<{}> | null;\r\n};\r\n\r\ntype Props = {\r\n  images: Array<GalleryItem>;\r\n  onOpen?: (opened: boolean) => void;\r\n};\r\n\r\nconst PhotoGallery: React.FC<Props> = ({ images, onOpen }) => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const modalAnimation = useSpring({\r\n    config: { mass: 10, tension: 1500, friction: 150 },\r\n    opacity: !viewerIsOpen ? 0 : 1,\r\n    from: { opacity: 0 },\r\n  });\r\n\r\n  const openLightbox = (event: React.MouseEvent, photos: Photos) => {\r\n    const { index } = photos;\r\n    console.log(photos);\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onOpen) {\r\n      onOpen(viewerIsOpen);\r\n    }\r\n  }, [viewerIsOpen, onOpen]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <a.div style={galleryAnimation}> */}\r\n      <Parallax translateY={[5, -5]}>\r\n        <Gallery\r\n          photos={images}\r\n          onClick={openLightbox}\r\n          targetRowHeight={isMobile ? 100 : 200}\r\n          margin={1}\r\n          columns={4}\r\n        />\r\n      </Parallax>\r\n      {viewerIsOpen ? (\r\n        <a.div style={modalAnimation}>\r\n          <Carousel\r\n            handleClose={closeLightbox}\r\n            images={images.map((image) => image.original || image.src)}\r\n            selectedIndex={currentImage}\r\n          ></Carousel>\r\n        </a.div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import React, { forwardRef } from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { ParallaxBanner } from \"react-scroll-parallax\";\r\nimport { animated as a, useSpring } from \"react-spring\";\r\nimport Col from \"../../components/Col\";\r\nimport Container from \"../../components/Container\";\r\nimport Row from \"../../components/Row\";\r\n\r\ntype Props = {\r\n  image?: string;\r\n  isVisible: boolean;\r\n};\r\n\r\nconst GalleryParallax = forwardRef(\r\n  ({ isVisible, image }: Props, ref: React.Ref<HTMLDivElement>) => {\r\n    const animation = useSpring({\r\n      config: { mass: 20, tension: 1000, friction: 150 },\r\n      delay: 500,\r\n      opacity: isVisible ? 1 : 0,\r\n      x: isVisible ? 0 : 20,\r\n      from: { opacity: 0, x: 20 },\r\n    });\r\n\r\n    return (\r\n      <div ref={ref}>\r\n        <ParallaxBanner\r\n          layers={[{ ...(image && { image: image }), translateY: [40, -30] }]}\r\n          style={{\r\n            height: isMobile ? \"100vh\" : \"120vh\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              position: \"absolute\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row align=\"center\">\r\n                <Col size={6} mobile={12}>\r\n                  <a.h2 className=\"text-center\" style={animation}>\r\n                    <span>\r\n                      A <strong>picture</strong> is worth a thousand{\" \"}\r\n                      <strong>words</strong>\r\n                    </span>\r\n                  </a.h2>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </ParallaxBanner>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default GalleryParallax;\r\n","import { getDatabase, ref } from \"firebase/database\";\r\nimport { createRef, useEffect, useState } from \"react\";\r\nimport { useObject } from \"react-firebase-hooks/database\";\r\nimport { useInViewport } from \"react-in-viewport\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport Col from \"../../components/Col\";\r\nimport Container from \"../../components/Container\";\r\nimport PhotoGallery from \"../../components/Gallery\";\r\nimport Row from \"../../components/Row\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\nimport GalleryParallax from \"./parallax\";\r\n\r\nimport { firebaseApp } from \"../../config/firebase\";\r\nimport { GalleryItem } from \"../../types\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Paper from \"../../components/Paper\";\r\nconst database = getDatabase(firebaseApp);\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  showNavBar?: (show: boolean) => void;\r\n};\r\nconst ParallaxImage = \"https://i.ibb.co/Fq1gCty/Alif-Ifti-5-3x4-medium.jpg\";\r\n\r\nconst GalleryPage: React.FC<Props> = ({ showNavBar }) => {\r\n  const [snapshots, loading, error] = useObject(ref(database, \"albums\"));\r\n  const [whiteCreamPhotos, setWhiteCreamPhotos] = useState<Array<GalleryItem>>(\r\n    []\r\n  );\r\n  const [blackOrangePhotos, setBlackOrangePhotos] = useState<\r\n    Array<GalleryItem>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    if (snapshots) {\r\n      const albums = snapshots.val();\r\n      if (albums[\"white-cream\"]) {\r\n        const photos: Array<GalleryItem> = Object.values(\r\n          albums[\"white-cream\"].photos\r\n        );\r\n        setWhiteCreamPhotos(photos);\r\n      }\r\n      if (albums[\"black-orange\"]) {\r\n        const photos: Array<GalleryItem> = Object.values(\r\n          albums[\"black-orange\"].photos\r\n        );\r\n        setBlackOrangePhotos(photos);\r\n      }\r\n    }\r\n  }, [snapshots]);\r\n\r\n  const galleryRef = createRef<HTMLDivElement>();\r\n  const galleryViewPort = useInViewport(galleryRef, {});\r\n\r\n  const parallaxRef = createRef<HTMLDivElement>();\r\n  const parallaxViewPort = useInViewport(parallaxRef, {});\r\n\r\n  return (\r\n    <Element name=\"Gallery\">\r\n      {isMobile ? (\r\n        <GalleryParallax\r\n          isVisible={parallaxViewPort.inViewport}\r\n          image={ParallaxImage}\r\n          ref={parallaxRef}\r\n        ></GalleryParallax>\r\n      ) : null}\r\n      <Container background=\"light\" fullWidth>\r\n        <Row align=\"center\" reverseOnMobile>\r\n          <Col mobile={12} size={7}>\r\n            <Row align=\"center\" noMargin>\r\n              <Col mobile={12} size={12}>\r\n                <div style={{ width: \"100%\" }} ref={galleryRef}>\r\n                  {error && <Paper>{error.message}</Paper>}\r\n                  {loading && <Loader></Loader>}\r\n                  {blackOrangePhotos && blackOrangePhotos.length > 0 && (\r\n                    <PhotoGallery\r\n                      images={blackOrangePhotos}\r\n                      onOpen={(opened) => {\r\n                        if (showNavBar && galleryViewPort.inViewport) {\r\n                          showNavBar(!opened);\r\n                        }\r\n                      }}\r\n                    ></PhotoGallery>\r\n                  )}\r\n                </div>\r\n              </Col>\r\n              <Col mobile={12} size={12}>\r\n                <h2>Our Moments</h2>\r\n              </Col>\r\n              <Col mobile={12} size={12}>\r\n                <div style={{ width: \"100%\" }}>\r\n                  {error && <Paper>{error.message}</Paper>}\r\n                  {loading && <Loader></Loader>}\r\n                  {whiteCreamPhotos && whiteCreamPhotos.length > 0 && (\r\n                    <PhotoGallery\r\n                      images={whiteCreamPhotos}\r\n                      onOpen={(opened) => {\r\n                        if (showNavBar && galleryViewPort.inViewport) {\r\n                          showNavBar(!opened);\r\n                        }\r\n                      }}\r\n                    ></PhotoGallery>\r\n                  )}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col mobile={12} size={5} desktopOnly>\r\n            <GalleryParallax\r\n              isVisible={parallaxViewPort.inViewport}\r\n              image={ParallaxImage}\r\n              ref={isMobile ? null : parallaxRef}\r\n            ></GalleryParallax>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Element>\r\n  );\r\n};\r\n\r\nexport default GalleryPage;\r\n"],"names":["images","selectedIndex","handleClose","useState","indexToShow","setIndexToShow","imageLoaded","setImageLoaded","useEffect","document","body","style","overflowY","className","styles","onClick","Button","color","variant","size","icon","src","alt","onLoad","Loader","length","onOpen","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","modalAnimation","useSpring","config","mass","tension","friction","opacity","from","translateY","photos","event","index","console","log","targetRowHeight","isMobile","margin","columns","map","image","original","forwardRef","ref","isVisible","animation","delay","x","layers","height","backgroundColor","top","bottom","left","right","position","display","alignItems","justifyContent","Container","Row","align","Col","mobile","database","getDatabase","firebaseApp","ParallaxImage","showNavBar","useObject","snapshots","loading","error","whiteCreamPhotos","setWhiteCreamPhotos","blackOrangePhotos","setBlackOrangePhotos","albums","val","Object","values","galleryRef","createRef","galleryViewPort","useInViewport","parallaxRef","parallaxViewPort","name","inViewport","background","fullWidth","reverseOnMobile","noMargin","width","Paper","message","opened","desktopOnly"],"sourceRoot":""}